{
  "hash": "74fbebe309b411daf60ecd0234845212",
  "result": {
    "markdown": "---\ntitle: \"Electricity generation in G20 countries\"\nauthor: \"Jolien Noels\"\ndate: \"2023-12-26\"\ncategories: [blog, data visualisation]\nformat:\n  html:\n    code-tools: true\n    css:\n      - https://cdn.knightlab.com/libs/juxtapose/latest/css/juxtapose.css\n---\n\n\nThis is a post with executable code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\ndir <- here::here(\"articles/electricity-generation-g20\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# elec <- read_excel(path = fs::path(dir, \"Data-Global-Electricity-Review-2021.xlsx\"), skip = 1)\n# elec <- elec %>% \n#   janitor::clean_names()\n# elec <- elec %>% \n#   rename(country = area) %>% \n#   mutate(share_of_production_percent = as.numeric(share_of_production_percent))\n# elec$category <- cut(\n#   elec$share_of_production_percent, \n#   breaks = c(-1, 20, 40, 60, 80, 101), \n#   labels = c(\"0-20\", \"20-40\", \"40-60\", \"60-80\", \"80-100\") \n# )\n\n#tiles <- read_excel(fs::path(dir, \"tilemap_eu_jn.xlsx\"))\n\n#data <- left_join(elec, tiles, by = c('country'))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# data %>% \n#   filter(\n#     region == \"Europe\",\n#     year == \"2019\",\n#     variable == \"Fossil\"\n#   ) %>% \n#   ggplot(aes(xmin = column, ymin = row, xmax = column + 1, ymax = row + 1)) +\n#   geom_rect(aes(fill = category), colour = \"white\") +\n#   geom_text(\n#     aes(x = column, y = row + 1, label = iso3), \n#     color = \"white\", nudge_x = 0.5, nudge_y = 0.5, size = 4\n#   ) + \n#   scale_y_reverse() +\n#   scale_fill_manual(values = c(\"#F3E9DA\",\"#dbcbbd\",\"#c87941\",\"#87431d\",\"#290001\")) +\n#   labs(\n#     fill = \"% of total\\nproduction\",\n#     caption = \"Data source: Ember. Graph: Jolien Noels.\",\n#     title = \"Electricity generation from fossil fuels, 2019\"\n#   ) +\n#   theme_void() +\n#   theme(\n#     legend.position = \"left\",\n#     legend.text = element_text(size = 12),\n#     legend.title = element_text(size = 12),\n#     plot.title = element_text(size = 14, hjust = 0),\n#     plot.background = element_rect(fill = \"white\", colour = \"white\")\n#   ) \n```\n:::\n\n\n## Step 1: add the CSS to the frontmatter\n\nYour YAML frontmatter should include the library's CSS (note how the examples on its GitHub README include a `<link rel=\"stylesheet\">` tag!):\n\n```yaml\ncss:\n  - https://cdn.knightlab.com/libs/juxtapose/latest/css/juxtapose.css\n```\n\n## Step 2: Importing the module\n\nLet's try it out. JuxtaposeJS is on [jsDelivr](https://www.jsdelivr.com), so we can just import it! It's a little stubborn, but requiring the individual file, rather than just the package name, seems to work (thanks, [Observable Module Require Debugger](https://observablehq.com/@observablehq/module-require-debugger)!). It produces an error but seems to work, so I just `catch` the error and ignore it:\n\n\n```{ojs}\n//| output: false\nrequire(\"https://cdn.jsdelivr.net/npm/juxtaposejs@1.1.6/build/js/juxtapose.min.js\")\n  .catch(() => null)\n```\n\n\n## Step 3: Write the Juxtapose!\n\nAnd here's the Juxtapose code! Once the library's loaded, you can just write it with HTML, [as per the README](https://github.com/NUKnightLab/juxtapose#html-implementation):\n\n```markdown\n::: {.juxtapose data-startingposition=\"35%\" style=\"margin-bottom:2em\"}\n\n![](https://unsplash.com/photos/o3TZx8_j7FE/download?ixid=MnwxMjA3fDB8MXxhbGx8fHx8fHx8fHwxNjUzMzY0ODYw&force=true&w=640){data-credit=\"Fabian Mardi on Unsplash\" data-label=\"Image A by Fabian Mardi on Unsplash\"}\n\n![](https://unsplash.com/photos/iFdPrhOPI_E/download?ixid=MnwxMjA3fDB8MXxhbGx8fHx8fHx8fHwxNjUzMzU4Mzg0&force=true&w=640){data-credit=\"Weyne Yew on Unsplash\" data-label=\"Image B by Weyne Yew on Unsplash\"}\n\n:::\n```\n\n::: {.juxtapose data-startingposition=\"35%\" style=\"margin-bottom:2em\"}\n\n![](./elec_eu.png){}\n\n![](https://unsplash.com/photos/iFdPrhOPI_E/download?ixid=MnwxMjA3fDB8MXxhbGx8fHx8fHx8fHwxNjUzMzU4Mzg0&force=true&w=640){data-credit=\"Weyne Yew on Unsplash\" data-label=\"Image B by Weyne Yew on Unsplash\"}\n\n:::\n\nNice! I've added a bit of extra `margin-bottom` to it so that this text clears it properly too.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}